{
    "openapi": "3.0.0",
    "info": {
        "title": "iGO - API documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Show products in the cart",
                "description": "Display a list of products added to the cart",
                "operationId": "showCart",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to the cart",
                "description": "Create/Update a product to/in the cart - Expect to recieve a product id and a quantity - If the product is already in the cart, updates the quantity",
                "operationId": "addToCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "extras": {
                                        "type": "string",
                                        "example": "[{'extra_id':1,'extra_quantity':2}]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/cart/{id}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from the cart",
                "description": "Remove a specified product from the cart - Expect to recieve a valid product id",
                "operationId": "removeFromCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/profile": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get client profile",
                "description": "Get data from logged in client",
                "operationId": "getClientProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Clients"
                ],
                "summary": "Set client profile",
                "description": "Update client profile data",
                "operationId": "setClientProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mussum Ipsum"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "example": "09/07/1988"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mussum@igo.pt"
                                    },
                                    "mobile_phone_number": {
                                        "type": "integer",
                                        "example": "978 645 312"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "iGO@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/addresses": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get client addresses",
                "description": "Get list of all addresses from logged in client",
                "operationId": "getClientAddresses",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Save client address",
                "description": "Create new client address - Update client address if address_id not null ",
                "operationId": "updateAddressData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "address_type_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "address_name": {
                                        "type": "string",
                                        "example": "Trabalho"
                                    },
                                    "line_1": {
                                        "type": "string",
                                        "example": "Address line 1. Eg: Av. Mauris nec dolor, nº 50"
                                    },
                                    "line_2": {
                                        "type": "string",
                                        "example": "Address line 2. Eg: Praceta São João"
                                    },
                                    "county": {
                                        "type": "string",
                                        "example": "Sociosqu"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Aptent"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "example": "46703"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Sociosqu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/favorite/{id}": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Set favorite partners",
                "description": "Set/Unset a partner as favorite - Expect to receive a valid partner id",
                "operationId": "setFavoritePartners",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/contents": {
            "get": {
                "tags": [
                    "Webcontent"
                ],
                "summary": "Get all active web contents",
                "description": "Display all active web contents",
                "operationId": "getAllWebContent",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/contents/{content}": {
            "get": {
                "tags": [
                    "Webcontent"
                ],
                "summary": "Get web content",
                "description": "Expect to receive a valid content area key (Options: 'about', 'faq', 'conditions', 'contacts') and return the respective content",
                "operationId": "getWebContent",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "description": "Options: 'about', 'faq', 'conditions', 'contacts'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/partners": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get the list of partners",
                "description": "Return a list of all active partners",
                "operationId": "getListOfPartners",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partners/{id}": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get partner information",
                "description": "Expect to receive a valid ID and return partner and his products data",
                "operationId": "getPartnerData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partners/{id}/products": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get partner products",
                "description": "Expect to receive a valid ID and return partner products data",
                "operationId": "getPartnerProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Create a new user and return token",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mussum Ipsum"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mussum@igo.pt"
                                    },
                                    "mobile_phone_number": {
                                        "type": "integer",
                                        "example": "978 645 312"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "iGO@123"
                                    },
                                    "line_1": {
                                        "type": "string",
                                        "example": "Address line 1. Eg: Av. Mauris nec dolor, nº 50"
                                    },
                                    "county": {
                                        "type": "string",
                                        "example": "Sociosqu"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Aptent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Log user and return an api token - For protected routes set the authorization: Bearer {api_token}",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "mussum@igo.pt"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "iGO@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Remove api token for logged user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/shippingfees": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get all shipping fees",
                "description": "Display a list of all shipping fees",
                "operationId": "getShippingFees",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/shippingfees/{id}": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get the especified shipping fee",
                "description": "Display the resource specified by ID.",
                "operationId": "getShippingFeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipping fee id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/shippingfees/{from}/{to}": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get the especified shipping fee",
                "description": "Display the resource specified by FROM(delivery_from) TO(delivery_to) paramters.",
                "operationId": "getShippingFeebyFromTo",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}