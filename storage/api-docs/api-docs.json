{
    "openapi": "3.0.0",
    "info": {
        "title": "iGO - API documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/client/addresses": {
            "get": {
                "tags": [
                    "Client: Address"
                ],
                "summary": "Get client addresses",
                "description": "Return all addresses related to the user",
                "operationId": "getClientAddresses",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Endereços",
                                    "data": {
                                        "addresses": [
                                            {
                                                "id": "integer",
                                                "address_name": "string",
                                                "address_type": "string",
                                                "address_line_1": "string",
                                                "address_line_2": "string",
                                                "county": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "locality": "string",
                                                "post_code": "string",
                                                "country": "string",
                                                "tax_name": "string",
                                                "tax_number": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client: Address"
                ],
                "summary": "Save client address",
                "description": "Create new client address - Update client address if address_id not null ",
                "operationId": "updateAddressData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            },
                            "example": [
                                {
                                    "address_id": 1,
                                    "address_type_id": 2,
                                    "address_name": "Trabalho",
                                    "line_1": "Address line 1. Eg: Av. Mauris nec dolor, nº 50",
                                    "line_2": "Address line 2. Eg: Praceta São João",
                                    "county_id": 1,
                                    "locality": "Bairro",
                                    "post_code": "46703",
                                    "country": "Angola",
                                    "tax_name": "Mussum",
                                    "tax_number": 987654321
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Endereços",
                                    "data": {
                                        "addresses": [
                                            {
                                                "id": "integer",
                                                "address_name": "string",
                                                "address_type": "string",
                                                "address_line_1": "string",
                                                "address_line_2": "string",
                                                "county": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "locality": "string",
                                                "post_code": "string",
                                                "country": "string",
                                                "tax_name": "string",
                                                "tax_number": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/addresses/{id}": {
            "delete": {
                "tags": [
                    "Client: Address"
                ],
                "summary": "Remove address",
                "description": "Remove client address specified in addres id",
                "operationId": "removeClienteAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Endereço removido"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/cart": {
            "get": {
                "tags": [
                    "Client: Cart"
                ],
                "summary": "Show products in the cart",
                "description": "Display a list of products added to the cart",
                "operationId": "showCart",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de produtos no carrinho",
                                    "data": {
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "product": {
                                                    "cart_product_id": "integer",
                                                    "product_id": "integer",
                                                    "name": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "total_products": "integer",
                                        "total_amount": "float"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client: Cart"
                ],
                "summary": "Add item to the cart",
                "description": "Create/Update a product to/in the cart - Expect to recieve a product id and a quantity - If the product is already in the cart, updates the quantity",
                "operationId": "addToCart",
                "requestBody": {
                    "description": "The field '<b>options</b>' should be the option that user can choose when ordering a product. <i>Eg.: Sauce or extras in a food type product </i> <br>The first field '<b>id</b>' should be the id of the <b>kind</b> of option. <i>Eg.: sauce or extra</i> <br>The '<b>values</b>' array should be filled with the  <b>option id</b>.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "options": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": ""
                                                },
                                                "values": {
                                                    "type": "object",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "values": [
                                                    54,
                                                    1
                                                ]
                                            },
                                            {
                                                "id": 2,
                                                "values": [
                                                    1
                                                ]
                                            },
                                            {
                                                "id": 3,
                                                "values": [
                                                    3
                                                ]
                                            }
                                        ]
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Remove pickles from the sandwich"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de produtos no carrinho",
                                    "data": {
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "product": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "total_products": "integer",
                                        "total_amount": "float"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/cart/{id}": {
            "delete": {
                "tags": [
                    "Client: Cart"
                ],
                "summary": "Remove item from the cart",
                "description": "Remove a specified product from the cart - Expect to recieve a valid <b>cart_product_id</b>",
                "operationId": "removeFromCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart_product_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Produto removido do carrinho!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Client: Cart"
                ],
                "summary": "Change the quantity of a specified product in the cart",
                "description": "If the quantity < 1, the product will be removed to the cart",
                "operationId": "changeINTheCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "This <b>id </b>represents <i>'cart_product_id'</i> returned in (GET)Cart and (GET)Checkout request ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Quantidade de itens alterada"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/cleancart": {
            "delete": {
                "tags": [
                    "Client: Cart"
                ],
                "summary": "Remove all items from the cart",
                "description": "Remove all products from the cart",
                "operationId": "removeAllFromCart",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Produtos removidos do Carrinho!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/profile": {
            "get": {
                "tags": [
                    "Client: Profile, Password & Favorite partners"
                ],
                "summary": "Get client profile",
                "description": "Get data from logged in client",
                "operationId": "getClientProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados pessoais",
                                    "data": {
                                        "id": "Integer",
                                        "name": "String",
                                        "birth_date": "Datetime",
                                        "email": "String",
                                        "mobile_phone_number": "String",
                                        "profile_image": "String"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Client: Profile, Password & Favorite partners"
                ],
                "summary": "Change client password",
                "description": "Update client password",
                "operationId": "setClientProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mussum Ipsum"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "example": "1988-07-09"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mussum@igo.pt"
                                    },
                                    "mobile_phone_number": {
                                        "type": "integer",
                                        "example": "978 645 312"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados atualizados",
                                    "data": {
                                        "id": "Integer",
                                        "name": "String",
                                        "birth_date": "Datetime",
                                        "email": "String",
                                        "mobile_phone_number": "String",
                                        "profile_image": "String"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": {
                                        "name": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "email": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "mobile_phone_number": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "line_1": [
                                            [
                                                "string"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/favorite/{id}": {
            "post": {
                "tags": [
                    "Client: Profile, Password & Favorite partners"
                ],
                "summary": "Set favorite partners",
                "description": "Set/Unset a partner as favorite - Expect to receive a valid partner id",
                "operationId": "setFavoritePartners",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Aderente favoritado"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/password": {
            "patch": {
                "tags": [
                    "Client: Profile, Password & Favorite partners"
                ],
                "summary": "Update client password",
                "description": "Update client password",
                "operationId": "updatePassWord",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "iGO@123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "iGOdelivery"
                                    },
                                    "confirm_new_password": {
                                        "type": "string",
                                        "example": "iGOdelivery"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Password alterado!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": {
                                        "current_password": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "new_password": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "confirm_new_password": [
                                            [
                                                "string"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/image": {
            "post": {
                "tags": [
                    "Client: Profile, Password & Favorite partners"
                ],
                "summary": "Update client profile image",
                "description": "Update profile image",
                "operationId": "updateImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#components/schemas/item"
                                    },
                                    {
                                        "properties": {
                                            "image": {
                                                "type": "string",
                                                "format": "binary"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Imagem alterada!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/deliverymanrating": {
            "post": {
                "tags": [
                    "Client: Review & Rating"
                ],
                "summary": "Delivery man rating",
                "description": "Rate the delivery man when he deliver the order",
                "operationId": "deliverymanRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rate": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "Mauris aliquet nunc non turpis scelerisque, eget. Diuretics paradis num copo é motivis de denguis. Em pé sem cair, deitado sem dormir, sentado sem cochilar e fazendo pose."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Estafeta avaliado com sucesso!",
                                    "data": {
                                        "order_id": "integer",
                                        "client_id": "integer",
                                        "deliveryman_id": "integer",
                                        "rate": "integer",
                                        "review": "string",
                                        "updated_at": "datetime",
                                        "created_at": "datetime",
                                        "id": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/orders": {
            "get": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Show all client order",
                "description": "Display a list of all client orders ",
                "operationId": "showOrders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "histórico de pedidos",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                },
                                                "can_reorder": "boolean"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/inprogress": {
            "get": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Show all client orders in progress ",
                "description": "Display a list of all client orders in progress (status id between 3 and 5)",
                "operationId": "showInProgressOrders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos em curso",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                },
                                                "can_reorder": "boolean"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/checkout": {
            "get": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Display order data",
                "description": "Show order details - Products, delivery, schedule, tax and payment data",
                "operationId": "showOrdersDetails",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "checkout",
                                    "data": {
                                        "partner": {
                                            "id": "integer",
                                            "name": "string",
                                            "images": {
                                                "image_cover": "string",
                                                "image_01": "string",
                                                "image_02": "string",
                                                "image_03": "string"
                                            },
                                            "category": {
                                                "id": "integer",
                                                "name": "string",
                                                "image": "string",
                                                "parent_category": null
                                            },
                                            "address": {
                                                "line_1": "string",
                                                "line_2": "string",
                                                "county": "string",
                                                "locality": "string",
                                                "post_code": "string",
                                                "country": "string"
                                            }
                                        },
                                        "products": [
                                            {
                                                "product": {
                                                    "cart_product_id": "integer - Used to update quantity of a specified product in the cart",
                                                    "id": "integer - Used to identify the product itself",
                                                    "name": "string",
                                                    "description": "string",
                                                    "price": "integer",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "integer"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "integer",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "delivery_address": {
                                            "id": "integer",
                                            "address_name": "string",
                                            "address_type": "string",
                                            "address_line_1": "string",
                                            "address_line_2": "string",
                                            "county": {
                                                "id": "integer",
                                                "name": "string"
                                            },
                                            "locality": "string",
                                            "post_code": "string",
                                            "country": "string",
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "delivery_time": "datetime",
                                        "tax_data": {
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "subtotal": "integer - Total of the sum of all products prices",
                                        "shipping_fee": "integer - Shipping fee",
                                        "total": "integer - Sum of subtotal and shipping fee",
                                        "promotional_code": "string - Promotional code from campaign, coupon or gift card",
                                        "discount": "integer - Discount from promotional code, coupon or gift card",
                                        "total_final": "integer - Sum of total and discount"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Checkout order",
                "description": "Update order data and if sent any paramter",
                "operationId": "checkout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "deliver_at": {
                                        "type": "string",
                                        "example": "2022-12-21 19:44"
                                    },
                                    "tax_name": {
                                        "type": "string",
                                        "example": "Fulano da Silva"
                                    },
                                    "tax_number": {
                                        "type": "integer",
                                        "example": "300 322 984"
                                    },
                                    "campaign_code": {
                                        "type": "string",
                                        "example": "FERIAS2021"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "checkout",
                                    "data": {
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "product": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "description": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "delivery_address": {
                                            "id": "integer",
                                            "address_name": "string",
                                            "address_type": "string",
                                            "address_line_1": "string",
                                            "address_line_2": "string",
                                            "county": {
                                                "id": "integer",
                                                "name": "string"
                                            },
                                            "locality": "string",
                                            "post_code": "string",
                                            "country": "string",
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "delivery_time": "datetime",
                                        "tax_data": {
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "subtotal": "float",
                                        "shipping_fee": "float",
                                        "total": "float",
                                        "discount": "float",
                                        "total_final": "float"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/submit": {
            "post": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Submit order",
                "description": "Change order status from Open to Submitted",
                "operationId": "submitOrder",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "O seu pedido foi submetido!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}": {
            "get": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Get the specified order",
                "description": "Return data of the specified order",
                "operationId": "getOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "checkout",
                                    "data": {
                                        "id": "integer",
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "images": {
                                                        "image_cover": "string",
                                                        "image_01": "string",
                                                        "image_02": "string",
                                                        "image_03": "string"
                                                    },
                                                    "category": {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "image": "string",
                                                        "parent_category": null
                                                    },
                                                    "address": {
                                                        "line_1": "string",
                                                        "line_2": "string",
                                                        "county": "string",
                                                        "locality": "string",
                                                        "post_code": "string",
                                                        "country": "string"
                                                    }
                                                },
                                                "product": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "delivery_address": {
                                            "id": "integer",
                                            "address_name": "string",
                                            "address_type": "string",
                                            "address_line_1": "string",
                                            "address_line_2": "string",
                                            "county": {
                                                "id": "integer",
                                                "name": "string"
                                            },
                                            "locality": "string",
                                            "post_code": "string",
                                            "country": "string",
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "delivery_time": "datetime",
                                        "tax_data": {
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "subtotal": "float",
                                        "shipping_fee": "float",
                                        "total": "float",
                                        "discount": "float",
                                        "total_final": "float",
                                        "can_reorder": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/replicate": {
            "post": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Replicate an specified order",
                "description": "Creates a new Order with the same data as another one <br>● This method uses the field <i>'can_reorder'</i> as a validation before replicating the order; <br>● If there are any items in the cart, it keeps them;",
                "operationId": "replicateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "checkout",
                                    "data": {
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "product": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "delivery_address": {
                                            "id": "integer",
                                            "address_name": "string",
                                            "address_type": "string",
                                            "address_line_1": "string",
                                            "address_line_2": "string",
                                            "county": {
                                                "id": "integer",
                                                "name": "string"
                                            },
                                            "locality": "string",
                                            "post_code": "string",
                                            "country": "string",
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "delivery_time": "datetime",
                                        "tax_data": {
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "subtotal": "float",
                                        "shipping_fee": "float",
                                        "total": "float",
                                        "discount": "float",
                                        "total_final": "float",
                                        "can_reorder": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/cancel": {
            "patch": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Cancel an specified order",
                "description": "Cancel the order if it has not been submitted more than two minutes",
                "operationId": "cancelOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedido cancelado!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/promocode": {
            "post": {
                "tags": [
                    "Client: Orders"
                ],
                "summary": "Apply promotional code",
                "description": "Check if the code is valid and add the discount in the order",
                "operationId": "promocode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "campaign_code": {
                                        "type": "string",
                                        "example": "FERIAS2021"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Discount added"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/orderrating": {
            "post": {
                "tags": [
                    "Client: Review & Rating"
                ],
                "summary": "Order rating",
                "description": "Rate the order when it arrive",
                "operationId": "orderRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rate": {
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedido avaliado com sucesso!",
                                    "data": {
                                        "order_id": "integer",
                                        "client_id": "integer",
                                        "rate": "integer",
                                        "updated_at": "datetime",
                                        "created_at": "datetime",
                                        "id": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/partnerrating": {
            "post": {
                "tags": [
                    "Client: Review & Rating"
                ],
                "summary": "Partner rating",
                "description": "Rate a partner after the order arrives",
                "operationId": "partnerRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rate": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "Mussum Ipsum, cacilds vidis litro abertis. Admodum accumsan disputationi eu sit. Vide electram sadipscing et per. Praesent vel viverra nisi."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Aderente avaliado com sucesso!",
                                    "data": {
                                        "order_id": "integer",
                                        "client_id": "integer",
                                        "rate": "integer",
                                        "review": "string",
                                        "updated_at": "datetime",
                                        "created_at": "datetime",
                                        "id": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/order/{id}/productrating": {
            "post": {
                "tags": [
                    "Client: Review & Rating"
                ],
                "summary": "Product rating",
                "description": "Rate a product after the order arrives",
                "operationId": "productRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "rate": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "Mussum Ipsum, cacilds vidis litro abertis. Admodum accumsan disputationi eu sit. Vide electram sadipscing et per. Praesent vel viverra nisi."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Aderente avaliado com sucesso!",
                                    "data": {
                                        "order_id": "integer",
                                        "client_id": "integer",
                                        "product_id": "integer",
                                        "rate": "integer",
                                        "review": "string",
                                        "updated_at": "datetime",
                                        "created_at": "datetime",
                                        "id": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/receipt/{id}": {
            "get": {
                "tags": [
                    "Client: Order Receipt"
                ],
                "summary": "Get the specified receipt",
                "description": "Return data of the specified order",
                "operationId": "getOrderReceipt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Recibo",
                                    "data": {
                                        "order_id": "integer",
                                        "partner": {
                                            "name": "string",
                                            "address": "string"
                                        },
                                        "submitted_at": "datetime",
                                        "sub_total": "integer",
                                        "total": "integer",
                                        "shipping_fee": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/counties": {
            "get": {
                "tags": [
                    "Counties"
                ],
                "summary": "Show counties",
                "description": "Display a list of all conties",
                "operationId": "showConties",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "County list",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "province": {
                                                "id": "integer",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/counties/{id}": {
            "get": {
                "tags": [
                    "Counties"
                ],
                "summary": "Get a specified county",
                "description": "Get the details of a specified county",
                "operationId": "getACounty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "County data",
                                    "data": {
                                        "id": "integer",
                                        "name": "string",
                                        "province": {
                                            "id": "integer",
                                            "name": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/deliveryman/orders": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Show orders data to deliveryman",
                "description": "Display quantity and last entry for new, in progress, finished and refused orders",
                "operationId": "showOrdersForDeliveryman",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados dos pedidos",
                                    "data": {
                                        "new_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "in_progress_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "completed_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "refused_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/deliveryman/orders/new": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Show new orders",
                "description": "Display a list of new orders to deliveryman",
                "operationId": "newOrdersForDeliveryman",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Novos pedidos",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/deliveryman/orders/inprogress": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Show in progress orders",
                "description": "Display a list of all in progress orders to deliveryman",
                "operationId": "inProgressOrdersForDeliveryman",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos em andamento",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/deliveryman/orders/completed": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Show completed orders",
                "description": "Display a list of all completed orders to deliveryman",
                "operationId": "completedOrdersForDeliveryman",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos concluídos",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/deliveryman/orders/refused": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Show refused orders",
                "description": "Display a list of all refused orders to deliveryman",
                "operationId": "refusedOrdersForDeliveryman",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos recusados",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime",
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/deliveryman/orders/{id}/accept": {
            "get": {
                "tags": [
                    "Deliveryman: Orders"
                ],
                "summary": "Get/Accept the specified order",
                "description": "Make the Deliveryman responsible for delivering the specified Order",
                "operationId": "deliverymanGetOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedido aceito"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/contents": {
            "get": {
                "tags": [
                    "Webcontent"
                ],
                "summary": "Get all active web contents",
                "description": "Display all active web contents",
                "operationId": "getAllWebContent",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Web content",
                                    "data": {
                                        "webcontent": [
                                            {
                                                "id": "integer",
                                                "title": "string",
                                                "content_area": "string",
                                                "content": "string",
                                                "translations": [
                                                    {
                                                        "locale": "string",
                                                        "title": "string",
                                                        "content": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/contents/{content}": {
            "get": {
                "tags": [
                    "Webcontent"
                ],
                "summary": "Get web content",
                "description": "Expect to receive a valid content area key (Options: 'about', 'faq', 'conditions', 'contacts') and return the respective content",
                "operationId": "getWebContent",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "description": "Options: 'about', 'faq', 'conditions', 'contacts'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Web content",
                                    "data": {
                                        "webcontent": [
                                            {
                                                "id": "integer",
                                                "title": "string",
                                                "content_area": "string",
                                                "content": "string",
                                                "translations": [
                                                    {
                                                        "locale": "string",
                                                        "title": "string",
                                                        "content": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/client/categories": {
            "get": {
                "tags": [
                    "Client: Partner Categories"
                ],
                "summary": "Get the list of categories",
                "description": "Return a list of all active partners categories",
                "operationId": "getListOfCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Todas as categorias",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string",
                                            "parent_category": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/categories/{id}": {
            "get": {
                "tags": [
                    "Client: Partner Categories"
                ],
                "summary": "Get partner category information",
                "description": "Return data of the specified partners category",
                "operationId": "getPartnerCategoryData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados da categoria",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string",
                                            "parent_category": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/maincategories": {
            "get": {
                "tags": [
                    "Client: Partner Categories"
                ],
                "summary": "Get the list of main categories",
                "description": "Return a list of all active main partner categories",
                "operationId": "getListOfMainCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Categorias Principais",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string",
                                            "parent_category": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/subcategories": {
            "get": {
                "tags": [
                    "Client: Partner Categories"
                ],
                "summary": "Get the list of sub categories",
                "description": "Return a list of all active sub partner categories",
                "operationId": "getListOfSubCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Sub Categorias",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string",
                                            "parent_category": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/partners": {
            "get": {
                "tags": [
                    "Client: Partners"
                ],
                "summary": "Get the list of partners",
                "description": "If the <b> location </b> parameter is null it will return a list of all active <i> Partners </i> - Eg.: api/v1/client/partners <br> If the <b> location </b> parameter receive a valid <b> county_id </b>, it will return all <i> Partners </i> in that Location Eg.: api/v1/client/partners?location=1 <br> If the <b> search </b> parameter receive any value, it will search for <i> Partners </i> with that Business name - Eg.: api/v1/client/partners?search=espetadas <br> If the <b> cat[] </b> parameter receive <b> category_id </b>s, it will search for <i> Partners </i> in that main Category - Eg.: api/v1/client/partners?cat[]=1&cat[]=2 <br> If the <b> subcat[] </b> parameter receive <b> category_id </b>s, it will search for <i> Partners </i> in that Sub Category - Eg.: api/v1/client/partners?subcat[]=1&subcat[]=2",
                "operationId": "getListOfPartners",
                "parameters": [
                    {
                        "name": "location",
                        "in": "query",
                        "description": "County id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Query - <small><i>'Fake company' will return two partners</i></small>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cat[]",
                        "in": "query",
                        "description": "Category",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "collectionFormat": "csv"
                        }
                    },
                    {
                        "name": "subcat[]",
                        "in": "query",
                        "description": "Sub categories",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "collectionFormat": "csv"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de aderentes",
                                    "data": {
                                        "partners": [
                                            {
                                                "id": "integer",
                                                "company_name": "string",
                                                "responsible_name": "string",
                                                "phone_number": "string",
                                                "mobile_phone_number": "string",
                                                "tax_number": "string",
                                                "category": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string",
                                                    "parent_category": "string"
                                                },
                                                "sub_categories": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "image": "string",
                                                        "parent_category": "string"
                                                    }
                                                ],
                                                "average_order_time": "string",
                                                "premium": "boolean",
                                                "account_created_at": "datetime",
                                                "account_approved_at": "datetime",
                                                "images": {
                                                    "id": "integer",
                                                    "partner_id": "integer",
                                                    "image_cover": "string",
                                                    "image_01": "string",
                                                    "image_02": "string",
                                                    "image_03": "string",
                                                    "created_at": "datetime",
                                                    "updated_at": "datetime"
                                                },
                                                "total_products": "integer",
                                                "total_reviews": "integer",
                                                "rating": "integer",
                                                "campaign": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "description": "string"
                                                },
                                                "address": {
                                                    "line_1": "string",
                                                    "line_2": "string",
                                                    "county": "string",
                                                    "locality": "string",
                                                    "post_code": "string",
                                                    "country": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/partners/{id}": {
            "get": {
                "tags": [
                    "Client: Partners"
                ],
                "summary": "Get partner information",
                "description": "Expect to receive a valid ID and return partner and his products data",
                "operationId": "getPartnerData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de aderentes",
                                    "data": {
                                        "partners": [
                                            {
                                                "id": "integer",
                                                "company_name": "string",
                                                "responsible_name": "string",
                                                "phone_number": "string",
                                                "mobile_phone_number": "string",
                                                "tax_number": "string",
                                                "category": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "image": "string",
                                                    "parent_category": "string"
                                                },
                                                "sub_categories": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "image": "string",
                                                        "parent_category": "string"
                                                    }
                                                ],
                                                "average_order_time": "string",
                                                "premium": "boolean",
                                                "account_created_at": "datetime",
                                                "account_approved_at": "datetime",
                                                "images": {
                                                    "id": "integer",
                                                    "partner_id": "integer",
                                                    "image_cover": "string",
                                                    "image_01": "string",
                                                    "image_02": "string",
                                                    "image_03": "string",
                                                    "created_at": "datetime",
                                                    "updated_at": "datetime"
                                                },
                                                "total_products": "integer",
                                                "total_reviews": "integer",
                                                "rating": "integer",
                                                "campaign": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "description": "string"
                                                },
                                                "address": {
                                                    "line_1": "string",
                                                    "line_2": "string",
                                                    "county": "string",
                                                    "locality": "string",
                                                    "post_code": "string",
                                                    "country": "string"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/partners/{id}/products": {
            "get": {
                "tags": [
                    "Client: Partners"
                ],
                "summary": "Get partner products",
                "description": "Expect to receive a valid ID and return partner products data",
                "operationId": "getPartnerProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de aderentes",
                                    "data": {
                                        "products": [
                                            {
                                                "id": "integer",
                                                "name": "string",
                                                "description": "string",
                                                "category": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "image": "string",
                                                "price": "float",
                                                "final_price": "float",
                                                "note": "string",
                                                "campaign": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "created_at": "datetime",
                                                "available": "boolean"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/partners/{id}/reviews": {
            "get": {
                "tags": [
                    "Client: Partners"
                ],
                "summary": "Get partner reviews",
                "description": "Expect to receive a valid ID and return partner reviews data",
                "operationId": "getPartnerReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Reviews do aderente",
                                    "data": {
                                        "partner": "string",
                                        "category_icon": "string",
                                        "total_reviews": "integer",
                                        "reviews": [
                                            {
                                                "id": "integer",
                                                "client_name": "string",
                                                "client_image": "string",
                                                "review": "string",
                                                "rating": "integer",
                                                "date": "datetime"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Show orders data to Partner",
                "description": "Display quantity and last entry for new, in progress, finished and refused orders",
                "operationId": "showOrdersForPartner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados dos pedidos",
                                    "data": {
                                        "new_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "in_progress_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "completed_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        },
                                        "refused_orders": {
                                            "label": "string",
                                            "orders_count": "integer",
                                            "last_entry": "datetime or null"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/new": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Show new orders",
                "description": "Display a list of new orders to partner",
                "operationId": "newOrdersForPartner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Novos pedidos",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime"
                                            }
                                        ],
                                        "partner": {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/inprogress": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Show in progress orders",
                "description": "Display a list of all in progress orders to Partner",
                "operationId": "inProgressOrdersForPartner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos em andamento",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime"
                                            }
                                        ],
                                        "partner": {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/completed": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Show completed orders",
                "description": "Display a list of all completed orders to Partner",
                "operationId": "completedOrdersForPartner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos concluídos",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime"
                                            }
                                        ],
                                        "partner": {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/refused": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Show refused orders",
                "description": "Display a list of all refused orders to Partner",
                "operationId": "refusedOrdersForPartner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedidos recusados",
                                    "data": {
                                        "orders": [
                                            {
                                                "id": "integer",
                                                "status": "string",
                                                "description": "string",
                                                "date": "datetime"
                                            }
                                        ],
                                        "partner": {
                                            "id": "integer",
                                            "name": "string",
                                            "image": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/{id}/accept": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Get/Accept the specified order",
                "description": "Partner accept the specified Order",
                "operationId": "partnermanGetOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedido aceito"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/{id}/refuse": {
            "patch": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Refuse the specified order",
                "description": "Partner refuse the specified Order",
                "operationId": "partnermanRefuseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "refused_for": {
                                        "type": "string",
                                        "example": "ruptura de estoque/No product in stock"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Pedido aceito"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/partner/orders/{id}": {
            "get": {
                "tags": [
                    "Partner: Orders"
                ],
                "summary": "Get the specified order",
                "description": "Return data of the specified order",
                "operationId": "getOrderforPartner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "checkout",
                                    "data": {
                                        "id": "integer",
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "partner": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "images": {
                                                        "image_cover": "string",
                                                        "image_01": "string",
                                                        "image_02": "string",
                                                        "image_03": "string"
                                                    },
                                                    "category": {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "image": "string",
                                                        "parent_category": null
                                                    },
                                                    "address": {
                                                        "line_1": "string",
                                                        "line_2": "string",
                                                        "county": "string",
                                                        "locality": "string",
                                                        "post_code": "string",
                                                        "country": "string"
                                                    }
                                                },
                                                "product": {
                                                    "id": "integer",
                                                    "name": "string",
                                                    "price": "float",
                                                    "quantity": "integer"
                                                },
                                                "options": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "values": [
                                                            {
                                                                "id": "integer",
                                                                "name": "string",
                                                                "price": "float"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "amount": "float",
                                                "created_at": "datetime"
                                            }
                                        ],
                                        "delivery_address": {
                                            "id": "integer",
                                            "address_name": "string",
                                            "address_type": "string",
                                            "address_line_1": "string",
                                            "address_line_2": "string",
                                            "county": {
                                                "id": "integer",
                                                "name": "string"
                                            },
                                            "locality": "string",
                                            "post_code": "string",
                                            "country": "string",
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "delivery_time": "datetime",
                                        "tax_data": {
                                            "tax_name": "string",
                                            "tax_number": "string"
                                        },
                                        "subtotal": "float",
                                        "shipping_fee": "float",
                                        "total": "float",
                                        "discount": "float",
                                        "total_final": "float",
                                        "can_reorder": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Create a new user and return token",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mussum Ipsum"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mussum@igo.pt"
                                    },
                                    "mobile_phone_number": {
                                        "type": "integer",
                                        "example": "978 645 312"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "iGO@123"
                                    },
                                    "line_1": {
                                        "type": "string",
                                        "example": "Address line 1. Eg: Av. Mauris nec dolor, nº 50"
                                    },
                                    "county_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "locality": {
                                        "type": "string",
                                        "example": "Aptent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de aderentes",
                                    "data": {
                                        "user": {
                                            "name": "string",
                                            "email": "string",
                                            "active": "boolean",
                                            "is_admin": "boolean",
                                            "is_partner": "boolean",
                                            "is_deliveryman": "boolean",
                                            "is_client": "boolean",
                                            "created_at": "datetime",
                                            "available": "boolean",
                                            "id": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The given data was invalid.",
                                    "errors": {
                                        "name": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "email": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "mobile_phone_number": [
                                            [
                                                "string"
                                            ]
                                        ],
                                        "line_1": [
                                            [
                                                "string"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Log user and return an api token - For protected routes set the authorization: Bearer {api_token}",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "client01@igo.pt"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "iGOdelivery"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Utilizador logado!",
                                    "data": {
                                        "user": {
                                            "id": "integer",
                                            "name": "string",
                                            "email": "string",
                                            "active": "boolean",
                                            "is_admin": "boolean",
                                            "is_partner": "boolean",
                                            "is_deliveryman": "boolean",
                                            "is_client": "boolean",
                                            "created_at": "datetime",
                                            "last_address_id": "integer"
                                        },
                                        "token": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Remove api token for logged user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Logout efetuado!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/products": {
            "get": {
                "tags": [
                    "Client: Products"
                ],
                "summary": "Get all products",
                "description": "Get the list of all products",
                "operationId": "getAllProducts",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de produtos do aderente",
                                    "data": {
                                        "products": [
                                            {
                                                "id": "integer",
                                                "name": "string",
                                                "description": "string",
                                                "category": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "image": "string",
                                                "price": "float",
                                                "final_price": "float",
                                                "note": "string",
                                                "campaign": {
                                                    "id": "integer",
                                                    "name": "string"
                                                },
                                                "created_at": "datetime",
                                                "available": "boolean"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/client/products/{id}": {
            "get": {
                "tags": [
                    "Client: Products"
                ],
                "summary": "Get a specified product",
                "description": "Get the details of a specified product",
                "operationId": "getAProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Dados do produto",
                                    "data": {
                                        "id": "integer",
                                        "name": "string",
                                        "description": "string",
                                        "category": {
                                            "id": "integer",
                                            "name": "string"
                                        },
                                        "options": [
                                            {
                                                "text": "Side dishes",
                                                "type": "radio",
                                                "mandatory": "boolean",
                                                "values": []
                                            },
                                            {
                                                "text": "Sauces",
                                                "type": "radio",
                                                "mandatory": "boolean",
                                                "values": []
                                            },
                                            {
                                                "text": "Extras",
                                                "type": "checkbox",
                                                "mandatory": "boolean",
                                                "values": [
                                                    {
                                                        "id": "integer",
                                                        "name": "string",
                                                        "price": "float"
                                                    }
                                                ]
                                            }
                                        ],
                                        "product_allergens": [],
                                        "image": "string",
                                        "price": "boolean",
                                        "final_price": "float",
                                        "note": "string",
                                        "campaign": {
                                            "id": "integer",
                                            "name": "string"
                                        },
                                        "created_at": "datetime",
                                        "available": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/provinces": {
            "get": {
                "tags": [
                    "Provinces"
                ],
                "summary": "Show provinces",
                "description": "Display a list of all provinces",
                "operationId": "showProvinces",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Province list",
                                    "data": [
                                        {
                                            "id": "integer",
                                            "name": "string",
                                            "country": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/provinces/{id}": {
            "get": {
                "tags": [
                    "Provinces"
                ],
                "summary": "Get a specified province",
                "description": "Get the details of a specified province",
                "operationId": "getProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "province id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "province data",
                                    "data": {
                                        "id": "integer",
                                        "name": "string",
                                        "country": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/shippingfees": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get all shipping fees",
                "description": "Display a list of all shipping fees",
                "operationId": "getShippingFees",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Lista de taxas de entrega",
                                    "data": {
                                        "shipping_fees": [
                                            {
                                                "id": "integer",
                                                "delivery_from_id": "integer",
                                                "delivery_from_name": "string",
                                                "delivery_to_id": "integer",
                                                "delivery_to_name": "string",
                                                "price": "float"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/shippingfees/{id}": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get the especified shipping fee",
                "description": "Display the resource specified by ID.",
                "operationId": "getShippingFeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipping fee id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Taxas de entrega",
                                    "data": {
                                        "shipping_fees": [
                                            {
                                                "id": "integer",
                                                "delivery_from_id": "integer",
                                                "delivery_from_name": "string",
                                                "delivery_to_id": "integer",
                                                "delivery_to_name": "string",
                                                "price": "float"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v1/shippingfees/{from}/{to}": {
            "get": {
                "tags": [
                    "Shipping fees"
                ],
                "summary": "Get the especified shipping fee",
                "description": "Display the resource specified by FROM(delivery_from) TO(delivery_to) paramters.",
                "operationId": "getShippingFeebyFromTo",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": "success",
                                    "message": "Taxas de entrega",
                                    "data": {
                                        "shipping_fees": [
                                            {
                                                "id": "integer",
                                                "delivery_from_id": "integer",
                                                "delivery_from_name": "string",
                                                "delivery_to_id": "integer",
                                                "delivery_to_name": "string",
                                                "price": "float"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}